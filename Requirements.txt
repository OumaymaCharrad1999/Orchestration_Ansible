########## Step 1 : Configure Centos container to support SSH in Docker ##########
[Oumayma@localhost ~]$ sudo systemctl start docker
[sudo] password for Oumayma:
[Oumayma@localhost ~]$ sudo systemctl status docker


[Oumayma@localhost ~]$ docker images
[Oumayma@localhost ~]$ docker ps -l
[Oumayma@localhost ~]$ docker ps -a
[Oumayma@localhost ~]$ docker network ls


[Oumayma@localhost ~]$ mkdir orchestration
[Oumayma@localhost ~]$ cd orchestration
[Oumayma@localhost orchestration]$ vim Dockerfile
### Build the image from the Dockerfile ###
[Oumayma@localhost orchestration]$ docker build --rm -t centos-ssh .
[Oumayma@localhost orchestration]$ docker images
### Deploy the container ####
[Oumayma@localhost orchestration]$ docker run -d -P --name test_centos_ssh centos-ssh
[Oumayma@localhost orchestration]$ docker ps -l
### Locate the IP address of the running container ###
[Oumayma@localhost orchestration]$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' test_centos_ssh
### SSH into the running container ###
[Oumayma@localhost orchestration]$ ssh root@172.17.0.4
[root@f23690f52790 ~]# exit


[Oumayma@localhost orchestration]$ vim docker-compose.yml
[Oumayma@localhost orchestration]$ docker compose up
[Oumayma@localhost orchestration]$ docker ps -a
[Oumayma@localhost orchestration]$ docker network ls
[Oumayma@localhost orchestration]$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' centos_build_test
[Oumayma@localhost orchestration]$ ssh root@192.168.20.2
[root@371a0f8e8db5 ~]# exit


[Oumayma@localhost orchestration]$ docker exec -d 371a0f8e8db5 bash -c "echo 'nameserver 8.8.8.8' > /etc/resolv.conf"
[Oumayma@localhost orchestration]$ docker exec -it 371a0f8e8db5 bash


### Log into the Docker Hub ###
[Oumayma@localhost orchestration]$ docker login --username=oumaymacharrad
### Tag the image ###
[Oumayma@localhost orchestration]$ docker tag d104aad35156 oumaymacharrad/centos-ssh:latest
### Push the image to the repository created ###
[Oumayma@localhost orchestration]$ docker push oumaymacharrad/centos-ssh





########## Step 2 : Install a Runner ##########
### Download the binary for your system ###
[Oumayma@localhost ~]$ sudo curl -L --output /usr/local/bin/gitlab-runner "https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64"


[Oumayma@localhost ~]$ cd /usr/local/bin
[Oumayma@localhost bin]$ ls
### Give it permission to execute ###
[Oumayma@localhost bin]$ sudo chmod +x /usr/local/bin/gitlab-runner
[Oumayma@localhost bin]$ ls


### Create a GitLab Runner user ###
[Oumayma@localhost bin]$ sudo useradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash


### Install and run as a service ###
[Oumayma@localhost bin]$ sudo ./gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner
[Oumayma@localhost bin]$ sudo ./gitlab-runner start
[Oumayma@localhost bin]$ sudo ./gitlab-runner status


### Register a Runner ###
[Oumayma@localhost bin]$ sudo ./gitlab-runner register
[Oumayma@localhost bin]$ sudo ./gitlab-runner verify





########## Step 3 : Create a .gitlab-ci.yml file and view the status of the pipeline and jobs ##########





########## Step 4 : Create and run Ansible Playbook ##########
### Create my first Ansible Playbook ###
[Oumayma@localhost ~]$ cd /etc/ansible
[Oumayma@localhost ansible]$ vim my_first_playbook.yml
[Oumayma@localhost ansible]$ ansible-playbook my_first_playbook.yml


### Keys based SSH authentication with nodes ###
[Oumayma@localhost ansible]$ sudo su
[root@localhost ansible]# ssh-keygen -t rsa -b 4096


### Copy the SSH Key to the remote servers ###
[root@localhost ansible]# ssh-copy-id root@192.168.20.2
[root@localhost ansible]# ssh-copy-id root@192.168.20.3
[root@localhost ansible]# ssh-copy-id root@192.168.20.4


### Create inventory of remote hosts ###
[root@localhost ansible]# vim hosts


### Verify the connectivity from Ansible server to remote servers ###
[root@localhost ansible]# ansible -m ping 192.168.20.2
[root@localhost ansible]# ansible -m ping 192.168.20.3
[root@localhost ansible]# ansible -m ping 192.168.20.4
### Ping all configured hosts ###
[root@localhost ansible]# ansible all -m ping


### Execute Remote Commands ###
[root@localhost ansible]# ansible -m command -a 'df -h' 192.168.20.2
[root@localhost ansible]# ansible -m command -a 'uptime' 192.168.20.2
[root@localhost ansible]# ansible -m command -a 'df -h' my_nodes
[root@localhost ansible]# ansible -m command -a 'uptime' my_nodes


### Create Ansible Playbook to configure a host to run an Apache Web Server ###
[root@localhost ansible]# vim httpd.yml
[root@localhost ansible]# ansible-playbook -l 192.168.20.2 httpd.yml


### Create Ansible Playbook to collect server logs ###
[root@localhost ansible]# vim journaux.yml
[root@localhost ansible]# ansible-playbook journaux.yml
[root@localhost ansible]# cd /tmp/logs
[root@localhost logs]# ls
[root@localhost logs]# tree





########## Deploy a CentOS container image with systemd enabled ##########
[Oumayma@localhost ~]$ docker run -dit --name test_clatest_ssh --privileged centos /usr/sbin/init
[Oumayma@localhost ~]$ docker ps -a
[Oumayma@localhost ~]$ docker exec -it 843a69dba431 bash
[root@843a69dba431 /]# ps aux
[root@843a69dba431 /]# cd /etc/yum.repos.d
[root@843a69dba431 yum.repos.d]# ls
[root@843a69dba431 yum.repos.d]# vi CentOS-Linux-AppStream.repo 
[root@843a69dba431 yum.repos.d]# vi CentOS-Linux-BaseOS.repo 
[root@843a69dba431 yum.repos.d]# cat /etc/resolv.conf
[root@843a69dba431 yum.repos.d]# yum -y install openssh-server openssh-clients passwd net-tools
[root@843a69dba431 yum.repos.d]# systemctl start sshd
[root@843a69dba431 yum.repos.d]# systemctl status sshd
[root@843a69dba431 yum.repos.d]# passwd root
[root@843a69dba431 yum.repos.d]# yum -y install ncurses
[root@843a69dba431 yum.repos.d]# clear
[root@843a69dba431 yum.repos.d]# ifconfig
[root@843a69dba431 yum.repos.d]# exit
[Oumayma@localhost ~]$ sudo su
[root@localhost Oumayma]# ssh-copy-id 172.17.0.7
[root@localhost Oumayma]# ansible-playbook httpd.yml
[root@localhost Oumayma]# ssh 172.17.0.7
[root@843a69dba431 ~]# cd /var/www/html
[root@843a69dba431 html]# ls
index.html
[root@843a69dba431 html]# cat index.html
